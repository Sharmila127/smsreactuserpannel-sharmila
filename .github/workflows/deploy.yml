name: Deploy User App

on:
  push:
    branches:
      - main   # or your branch
  workflow_dispatch:

jobs:
  deploy-user:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies and build
      - name: Install dependencies and Build
        run: |
          npm install
          npm run build

      # Step 4: Install AWS CLI
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws --version

      # Step 5: Configure AWS credentials
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $AWS_REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-south-1

      # Step 6: Deploy to S3
      - name: Deploy to S3 (User App)
        run: |
          aws s3 sync ./dist/ s3://sms-frontend-app/user --delete

      # Step 7: Invalidate CloudFront so changes appear instantly
      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-south-1
          CLOUDFRONT_ID: ${{ secrets.CLOUDFRONT_ID }}
